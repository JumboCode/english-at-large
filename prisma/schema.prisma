generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(cuid())
  name         String?
  email        String?        @unique
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  role         UserRole
  clerkId      String         @default("placeholder")
  pending      Boolean        @default(false)
  inviteID     String         @default("none")
  BookRequests BookRequests[]

  @@map("users")
}

model Book {
  id           Int            @id @default(autoincrement())
  isbn         String
  notes        String?
  scanLink     String?
  title        String
  author       String
  description  String
  publisher    String
  releaseDate  String?
  skills       BookSkills[]
  bookType     BookType
  level        BookLevel
  status       BookStatus     @default(Available)
  numPages     Int?           @default(0)
  coverURL     String         @default("placeholder")
  BookRequests BookRequests[]

  @@map("Books")
}

model BookRequests {
  id          Int        @id @default(autoincrement())
  userId      String
  bookId      Int
  status      BookStatus
  createdAt   DateTime
  message     String
  bookTitle   String
  requestedOn DateTime
  returnedBy  DateTime
  Books       Book       @relation(fields: [bookId], references: [id], onDelete: Cascade)
  users       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
  Admin
  Volunteer
  Tutor
}

enum BookStatus {
  Available
  Requested
  Borrowed
  Lost
  Pickup
  Returned
}

enum BookSkills {
  Grammar
  Vocab_Building
  Reading
  Writing
  Speaking
  Listening
  Pronounciation
}

enum BookType {
  Reference
  Volunteer_Resource
  Standalone
  Series
}

enum BookLevel {
  Beginner
  High_Beginner
  Low_Intermediate
  Intermediate
  High_Intermediate
  Advanced
}
